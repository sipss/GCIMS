% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aaa-class-GCIMSDataset.R
\name{GCIMSDataset}
\alias{GCIMSDataset}
\alias{GCIMSDataset-class}
\title{GCIMSDataset}
\description{
GCIMSDataset is an R6 class to store a dataset.

When the dataset is created, the \code{on_ram} option controls whether the actual
data is stored not in memory or it is read/saved from/to files as
needed, so the dataset object scales with large number of samples.
}
\section{Constructors:}{
\itemize{
\item \href{#method-GCIMSDataset-new}{\code{GCIMSDataset$new()}}
\item \href{#constructor-GCIMSDataset-new-from-list}{\code{GCIMSDataset$new_from_list()}}: Create a new GCIMSDataset from a list of samples
\item \href{#constructor-GCIMSDataset-new-from-saved-dir}{\code{GCIMSDataset$new_from_saved_dir()}}: Create a new on disk GCIMSDataset from a directory
}

\if{html}{\out{<hr>}}
\if{html}{\out{<a id="constructor-GCIMSDataset-new-from-list"></a>}}
\if{latex}{\out{\hypertarget{constructor-GCIMSDataset-new-from-list}{}}}
\subsection{Constructor \code{new_from_list()}}{

Create a new GCIMSDataset object from a list of samples. Note that with this
constructor \code{on_ram} is \code{TRUE} by default
\subsection{Usage}{

\if{html}{\out{<div class="sourceCode">}}\preformatted{GCIMSDataset$new_from_list(
  samples,
  pData=NULL,
  scratch_dir = NULL,
  keep_intermediate = FALSE,
  on_ram = TRUE
)
}\if{html}{\out{</div>}}
}

\subsection{Arguments}{

See \href{#method-GCIMSDataset-new}{\code{GCIMSDataset$new()}}
}

}

\subsection{Constructor \code{new_from_saved_dir()}}{

Creates a new GCIMSDataset object from a directory where a GCIMSDataset with
\code{on_ram=FALSE} was saved.
\subsection{Usage}{

\if{html}{\out{<div class="sourceCode">}}\preformatted{GCIMSDataset$new_from_saved_dir(
  input_dir,
  scratch_dir = dirname(input_dir)
)
}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\itemize{
\item \code{input_dir}: The path to the directory where the \code{dataset.rds} is saved and all the corresponding \code{sample_*.rds} files are.
Typically a subdirectory of \code{scratch_dir}.
\item \code{scratch_dir}: The new scratch directory where further processing samples will be saved. By default it is the parent of \code{input_dir}.
}
}

}
}

\examples{

## ------------------------------------------------
## Method `GCIMSDataset$new`
## ------------------------------------------------

dummy_dataset <- GCIMSDataset$new(
  pData = data.frame(SampleID = character(), filename = character(0)),
  base_dir = tempdir()
)
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{pData}}{A data frame with at least the SampleID and filename columns.}

\item{\code{align}}{To store alignment results}

\item{\code{peaks}}{To store the peak list}

\item{\code{TIS}}{A matrix of n_samples vs drift time, with the Total Ion Spectrum of each sample}

\item{\code{RIC}}{A matrix of n_samples vs retention time, with the Reverse Ion Chromatogram of each sample}

\item{\code{dt_ref}}{A numeric drift time of reference}

\item{\code{rt_ref}}{A numeric retention time of reference}

\item{\code{userData}}{A list to store arbitrary data in the dataset}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{sampleNames}}{The sample names of the GCIMSDataset samples}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-GCIMSDataset-new}{\code{GCIMSDataset$new()}}
\item \href{#method-GCIMSDataset-print}{\code{GCIMSDataset$print()}}
\item \href{#method-GCIMSDataset-appendDelayedOp}{\code{GCIMSDataset$appendDelayedOp()}}
\item \href{#method-GCIMSDataset-hasDelayedOps}{\code{GCIMSDataset$hasDelayedOps()}}
\item \href{#method-GCIMSDataset-realize}{\code{GCIMSDataset$realize()}}
\item \href{#method-GCIMSDataset-getSample}{\code{GCIMSDataset$getSample()}}
\item \href{#method-GCIMSDataset-extract_dtime_rtime}{\code{GCIMSDataset$extract_dtime_rtime()}}
\item \href{#method-GCIMSDataset-getRIC}{\code{GCIMSDataset$getRIC()}}
\item \href{#method-GCIMSDataset-extract_RIC_and_TIS}{\code{GCIMSDataset$extract_RIC_and_TIS()}}
\item \href{#method-GCIMSDataset-is_on_disk}{\code{GCIMSDataset$is_on_disk()}}
\item \href{#method-GCIMSDataset-copy}{\code{GCIMSDataset$copy()}}
\item \href{#method-GCIMSDataset-updateScratchDir}{\code{GCIMSDataset$updateScratchDir()}}
\item \href{#method-GCIMSDataset-getCurrentDir}{\code{GCIMSDataset$getCurrentDir()}}
\item \href{#method-GCIMSDataset-clone}{\code{GCIMSDataset$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-new"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-new}{}}}
\subsection{Method \code{new()}}{
Create a new GCIMSDataset object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$new(
  pData = NULL,
  base_dir = NULL,
  ...,
  samples = NULL,
  parser = "default",
  scratch_dir = NULL,
  keep_intermediate = FALSE,
  on_ram = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pData}}{A data frame holding phenotype data for the samples (or \code{NULL}). The data frame
should at least have a \code{SampleID} column, and a \code{filename} column if samples are stored in files.}

\item{\code{base_dir}}{The base directory. Sample \code{i} is found on \code{file.path(base_dir, pData$filename[i])}.}

\item{\code{...}}{Unused}

\item{\code{samples}}{A named list of \code{GCIMSSample} objects to be included in the dataset (or \code{NULL}). Names
should correspond to the \code{SampleID} column in the \code{pData} data frame.}

\item{\code{parser}}{Function that takes a file path and returns a \link{GCIMSSample} object. Use \code{"default"} to use the
default parser in the GCIMS package, that supports \code{.mea} files (from GAS). Check
out \code{vignette("importing-custom-data-formats", package = "GCIMS")} for more information}

\item{\code{scratch_dir}}{A directory where intermediate and processed samples will be stored}

\item{\code{keep_intermediate}}{If \code{TRUE}, intermediate results will not be deleted (ignored if \code{on_ram} is \code{TRUE}).}

\item{\code{on_ram}}{If \code{TRUE}, samples are not stored on disk, but rather kept on RAM. Set it to \code{TRUE} only with
small datasets.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{dummy_dataset <- GCIMSDataset$new(
  pData = data.frame(SampleID = character(), filename = character(0)),
  base_dir = tempdir()
)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-print"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-print}{}}}
\subsection{Method \code{print()}}{
prints the dataset to the screen
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-appendDelayedOp"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-appendDelayedOp}{}}}
\subsection{Method \code{appendDelayedOp()}}{
Appends a delayed operation to the dataset so it will run afterwards
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$appendDelayedOp(operation)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{operation}}{A \linkS4class{DelayedOperation} object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The modified GCIMSDataset object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-hasDelayedOps"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-hasDelayedOps}{}}}
\subsection{Method \code{hasDelayedOps()}}{
Find out if the dataset has pending operations
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$hasDelayedOps()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns \code{TRUE} if the dataset has pending operations, \code{FALSE} otherwise
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-realize"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-realize}{}}}
\subsection{Method \code{realize()}}{
Execute all pending operations on the dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$realize(keep_intermediate = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keep_intermediate}}{logical or \code{NA}. Only when the analysis is on disk, keep intermediate result files.
If \code{NA}, the \code{keep_intermediate} option given at the dataset initialization takes precedence.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The dataset object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-getSample"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-getSample}{}}}
\subsection{Method \code{getSample()}}{
Get a sample from a GCIMSDataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$getSample(sample)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sample}}{Either an integer (sample index) or a string (sample name)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The GCIMSSample object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-extract_dtime_rtime"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-extract_dtime_rtime}{}}}
\subsection{Method \code{extract_dtime_rtime()}}{
Sets an action to extract the reference retention and drift times
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$extract_dtime_rtime()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-getRIC"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-getRIC}{}}}
\subsection{Method \code{getRIC()}}{
Get the Reverse Ion Chromatogram
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$getRIC()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A matrix with the reverse ion chromatograms for all samples
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-extract_RIC_and_TIS"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-extract_RIC_and_TIS}{}}}
\subsection{Method \code{extract_RIC_and_TIS()}}{
Extracts the RIC and the TIS
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$extract_RIC_and_TIS()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The GCIMSDataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-is_on_disk"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-is_on_disk}{}}}
\subsection{Method \code{is_on_disk()}}{
Whether the dataset is saved on disk or stored in RAM
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$is_on_disk()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if on disk, \code{FALSE} otherwise
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-copy"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-copy}{}}}
\subsection{Method \code{copy()}}{
Creates a copy of the dataset. If the dataset is stored on disk, then
a new \code{scratch_dir} must be used.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$copy(scratch_dir = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{scratch_dir}}{The scratch directory where samples being processed will be stored, if the copy is on disk.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new GCIMSDataset object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-updateScratchDir"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-updateScratchDir}{}}}
\subsection{Method \code{updateScratchDir()}}{
For on-disk datasets, copy all samples to a new scratch dir.
This is useful when creating copies of the dataset, using the \code{dataset$copy()} method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$updateScratchDir(scratch_dir, override_current_dir = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{scratch_dir}}{The new \code{scratch_dir}, must be different from the current one}

\item{\code{override_current_dir}}{Typically used only internally, overrides the location of the samples. Useful when we are
loading a dataset from a directory and the directory was moved since it was saved.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-getCurrentDir"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-getCurrentDir}{}}}
\subsection{Method \code{getCurrentDir()}}{
Get the directory where processed samples are being saved, on on-disk datasets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$getCurrentDir()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Either a path or \code{NULL}. \code{NULL} is returned if samples have not been saved (either
because have not been loaded or because the dataset is stored on RAM)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GCIMSDataset-clone"></a>}}
\if{latex}{\out{\hypertarget{method-GCIMSDataset-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GCIMSDataset$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
