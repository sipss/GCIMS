% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gcims_batch_run.R
\name{gcims_batch_run}
\alias{gcims_batch_run}
\title{Apply a workflow step to all samples}
\usage{
gcims_batch_run(dir_in, dir_out, what, ..., batch_params = NULL)
}
\arguments{
\item{dir_in}{Input directory where all .rds files to be processed are}

\item{dir_out}{Output directory where all .rds filess will be saved}

\item{what}{Function to run, that takes one sample object and returns one sample object}

\item{...}{Arguments to what}

\item{batch_params}{Argument so we can pass parameters to \code{gcims_batch_run}.
Ignored for now}
}
\value{
\code{NULL}. This function is called by its side effects
}
\description{
Apply a workflow step to all samples
}
\examples{
# We want to run the following function on one sample, and explore how
# the parameter `n` affects the output. Once we feel we have a good `n`,
# we want to apply the function to all samples in parallel or whatever.

# We have an input directory with two samples
dir_in <- tempfile("dir_in")
dir.create(dir_in, recursive = TRUE)
file.copy(
  system.file("extdata", "M3.rds", package = "GCIMS"),
  dir_in
)
file.copy(
  system.file("extdata", "M7.rds", package = "GCIMS"),
  dir_in
)

# We have a function we want to try on one sample first, and apply to
# all samples afterwards:

adds_n <- function(x, n) {
  x$data$data_df <- x$data$data_df + n
  return(x)
}

# Run on one sample:
one_file <- file.path(dir_in, "M3.rds")
one_sample <- readRDS(one_file)
# Before:
print(one_sample$data$data_df[1:3,1:3])
# Compute just on this sample
one_sample <- adds_n(one_sample, n  = 4)
# After:
print(one_sample$data$data_df[1:3,1:3])

# We are satisfied with n=4. Apply to all samples:
gcims_batch_run(dir_in, dir_out, adds_n, n=4)


}
