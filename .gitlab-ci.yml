stages:
  - dependencies
  - check
  - build_website
  - deploy

build_img:
  stage: dependencies
  tags: [sipss]
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 -w 0)\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --cache=true
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/ci-scripts/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG-${CI_COMMIT_REF_NAME}}"

check_pkg:
  stage: check
  image: "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG-${CI_COMMIT_REF_NAME}}"
  tags:
    - sipss
  script:
    - Rscript -e 'remotes::install_deps(dependencies = TRUE)'
    - Rscript -e 'rcmdcheck::rcmdcheck()'

BiocCheck:
  stage: check
  image: "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG-${CI_COMMIT_REF_NAME}}"
  tags:
    - sipss
  script:
    - Rscript -e 'remotes::install_local(dependencies=TRUE, upgrade=TRUE)'
    - Rscript -e 'BiocCheck::BiocCheck(`quit-with-status` = TRUE, `no-check-R-ver` = TRUE, `no-check-bioc-help` = TRUE)'
  allow_failure: true


# To produce a code coverage report as a GitLab page see
# https://about.gitlab.com/2016/11/03/publish-code-coverage-report-with-gitlab-pages/

build_site_and_coverage:
  stage: build_website
  coverage: '/Coverage: \d+\.\d+/'
  image: "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG-${CI_COMMIT_REF_NAME}}"
  tags:
    - sipss
  only:
    - master
  script:
    - Rscript -e 'remotes::install_local(force = TRUE, dependencies = TRUE)'
    - Rscript -e 'pkgdown::build_site()'
    - Rscript -e 'covr::gitlab(quiet = FALSE)'
  artifacts:
    paths:
      - public
    expire_in: 30 days


pages:
  stage: deploy
  image: alpine
  script:
    - ls
  artifacts:
    paths:
    - public
    expire_in: 30 days
  only:
    - master
